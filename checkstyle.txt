Starting audit...
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Coords.java:14:19: Parameter x should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Coords.java:14:26: Parameter y should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Coords.java:19:5: Class 'Coords' looks like designed for extension (can be subclassed), but the method 'toJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Coords' final or making the method 'toJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Coords.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:12:28: Using the '.*' form of import should be avoided - org.poo.playingcards.*. [AvoidStarImport]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:24:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:24:25: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:29:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:29:25: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:51:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'shuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'shuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:51:25: Parameter seed should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:56:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'dealCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'dealCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:56:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:56:27: Parameter index should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:58:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:65:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'printDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'printDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:12:44: Name 'tanks' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:22:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:22:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:23:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:23:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:29:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:29:25: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:29:37: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:30:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:30:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:31:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:31:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:38:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'getCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'getCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:38:26: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:38:35: Parameter col should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:42:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'existsTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'existsTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:42:31: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:44:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:44:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:45:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:45:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:54:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'attackedCardIsTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'attackedCardIsTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:54:39: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:54:48: Parameter col should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:58:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'removeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'removeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:58:28: Parameter defenseX should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:58:42: Parameter defenseY should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:62:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'unfreeze' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'unfreeze' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:62:26: Parameter backRow should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:62:39: Parameter frontRow should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:63:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:63:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:64:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:64:13: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:64:13: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:67:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:72:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'resetAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'resetAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:72:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:73:9: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:73:9: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:74:13: 'for' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:74:13: 'for' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:75:17: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:75:17: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:82:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'resetField' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'resetField' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:90:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'printAll' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'printAll' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:90:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:108:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'printAllFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'printAllFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:108:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Main.java:5:8: Unused import - com.fasterxml.jackson.annotation.JsonAutoDetect. [UnusedImports]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:26:18: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:32:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'startGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'startGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:52:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'startRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'startRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:54:62: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:57:62: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:66:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'resetMatch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'resetMatch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:73:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'playing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'playing' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:73:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:73:5: Method playing length is 166 lines (max allowed is 150). [MethodLength]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:73:30: Parameter input should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:130:73: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:158:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:178:23: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:186:23: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:194:23: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:202:23: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:240:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:240:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:240:29: Parameter action should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:250:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:262:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:264:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:268:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:270:17: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:279:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'attackCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'attackCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:279:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:279:30: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:279:31: Parameter attackerCoords should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:279:54: Parameter defenderCoords should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:283:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:286:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:288:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:292:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:292:60: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:296:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:296:54: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:299:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:300:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:300:60: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:303:14: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:303:55: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:308:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:314:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:314:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:314:30: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:314:31: Parameter attackerCoords should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:314:54: Parameter defenderCoords should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:318:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:321:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:324:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:329:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:329:63: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:332:20: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:333:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:333:63: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:338:53: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:339:48: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:342:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:342:63: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:345:20: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:346:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:346:63: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:352:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:352:54: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:355:16: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:355:57: '&&' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:359:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:364:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'attackHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'attackHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:364:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:364:30: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:364:31: Parameter attackerCoords should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:366:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:369:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:372:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:376:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:378:16: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:403:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'heroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'heroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:403:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:403:31: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:403:32: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:408:11: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:413:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:416:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:419:53: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:422:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:425:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:430:59: '||' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:433:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:436:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:6:28: Using the '.*' form of import should be avoided - org.poo.playingcards.*. [AvoidStarImport]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:30:19: Parameter decksInput should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:51:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:51:25: Parameter hero should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:74:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'resetPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'resetPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:82:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'shuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'shuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:82:25: Parameter seed should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:87:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'chooseDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'chooseDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:87:28: Parameter deckIdx should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:92:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'drawCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'drawCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:99:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:99:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:99:26: Parameter index should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:118:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'win' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'win' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:118:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:122:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'lose' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'lose' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:122:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:15:44: Name 'frontRowMinions' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:23:44: Name 'backRowMinions' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:51:18: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:51:28: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:51:40: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:52:18: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:52:38: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:52:64: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:63:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'getCardRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'getCardRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:63:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:65:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:67:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:72:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'isDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'isDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:76:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:76:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:76:24: Parameter defender should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:78:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:78:9: 'if' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:78:9: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:80:9: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:83:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:83:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:83:31: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:87:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:87:31: Parameter field should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:87:44: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:91:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'printCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'printCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:113:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'printHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'printHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:113:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:10:21: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:10:31: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:10:43: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:11:21: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:11:41: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:11:67: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:15:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:16:31: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:12:27: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:13:22: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:13:42: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:13:68: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:14:21: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:17:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:18:31: Parameter field should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:18:44: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:21:22: '4' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:22:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:12:28: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:13:22: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:13:42: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:13:68: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:14:21: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:17:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:18:31: Parameter field should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:18:44: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:19:29: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:23:14: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:23:15: '}' at column 15 should have line break before. [RightCurly]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:23:15: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:12:24: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:13:22: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:13:42: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:13:68: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:14:21: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:17:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:18:31: Parameter field should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:18:44: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:19:29: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:12:22: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:13:21: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:13:41: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:13:67: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:14:21: '30' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:17:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:18:31: Parameter field should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:18:44: Parameter row should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:19:29: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:20:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:5:33: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:10:18: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:10:28: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:10:40: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:11:22: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:11:42: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:11:68: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:15:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:16:31: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:5:40: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:6:26: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:10:25: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:10:35: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:10:47: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:11:22: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:11:42: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:11:68: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:15:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:16:31: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:5:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:10:22: Parameter mana should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:10:32: Parameter health should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:10:44: Parameter attackDamage should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:11:22: Parameter description should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:11:42: Parameter colors should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:11:68: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:15:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:16:31: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:17:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:19:9: 'else' construct must use '{}'s. [NeedBraces]
Audit done.
Checkstyle ends with 302 errors.
