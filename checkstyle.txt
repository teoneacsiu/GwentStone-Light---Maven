`Starting audit...
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Coords.java:19:5: Class 'Coords' looks like designed for extension (can be subclassed), but the method 'toJson' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Coords' final or making the method 'toJson' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Coords.java:19:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:12:28: Using the '.*' form of import should be avoided - org.poo.playingcards.*. [AvoidStarImport]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:25:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:25:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:25:25: Parameter card should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:30:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:30:25: Parameter cardInput should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:52:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'shuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'shuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:52:25: Parameter seed should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:57:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'dealCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'dealCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:57:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:57:27: Parameter index should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:66:5: Class 'Deck' looks like designed for extension (can be subclassed), but the method 'printDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deck' final or making the method 'printDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Deck.java:66:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:12:44: Name 'tanks' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:29:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'addCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'addCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:29:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:38:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'getCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'getCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:42:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'existsTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'existsTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:54:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'attackedCardIsTank' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'attackedCardIsTank' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:58:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'removeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'removeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:58:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:62:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'unfreeze' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'unfreeze' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:62:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:74:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'resetAttack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'resetAttack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:84:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'resetField' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'resetField' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:84:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:92:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'printAll' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'printAll' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:110:5: Class 'Field' looks like designed for extension (can be subclassed), but the method 'printAllFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Field' final or making the method 'printAllFrozen' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Field.java:110:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:33:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'startGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'startGame' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:33:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:53:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'startRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'startRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:53:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:67:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'resetMatch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'resetMatch' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:74:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'playing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'playing' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:74:5: Method playing length is 172 lines (max allowed is 150). [MethodLength]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:247:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'placeCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'placeCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:247:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:288:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'attackCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'attackCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:288:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:329:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:329:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:391:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'attackHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'attackHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:391:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:435:5: Class 'Match' looks like designed for extension (can be subclassed), but the method 'heroAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Match' final or making the method 'heroAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Match.java:435:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:6:28: Using the '.*' form of import should be avoided - org.poo.playingcards.*. [AvoidStarImport]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:51:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:51:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:74:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'resetPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'resetPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:82:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'shuffle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'shuffle' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:82:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:87:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'chooseDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'chooseDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:87:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:91:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'drawCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'drawCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:91:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:97:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:97:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:115:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'win' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'win' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:115:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:119:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'lose' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'lose' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\main\Player.java:119:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:64:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'getCardRow' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'getCardRow' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:75:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'isDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'isDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:79:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:79:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:79:24: Parameter defender should be final. [FinalParameters]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:88:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:88:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:92:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:92:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:96:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'printCard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'printCard' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:96:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:118:5: Class 'Cards' looks like designed for extension (can be subclassed), but the method 'printHero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cards' final or making the method 'printHero' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Cards.java:118:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Disciple.java:16:5: Class 'Disciple' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Disciple' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\EmpressThorina.java:18:5: Class 'EmpressThorina' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'EmpressThorina' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\GeneralKocioraw.java:18:5: Class 'GeneralKocioraw' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GeneralKocioraw' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\KingMudface.java:18:5: Class 'KingMudface' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KingMudface' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\LordRoyce.java:18:5: Class 'LordRoyce' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'LordRoyce' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\Miraj.java:16:5: Class 'Miraj' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Miraj' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheCursedOne.java:16:5: Class 'TheCursedOne' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheCursedOne' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\stefa\OneDrive\Documents\GitHub\GwentStone Light - Maven\.\src\main\java\org\poo\playingcards\TheRipper.java:16:5: Class 'TheRipper' looks like designed for extension (can be subclassed), but the method 'useAbility' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'TheRipper' final or making the method 'useAbility' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 96 errors.
